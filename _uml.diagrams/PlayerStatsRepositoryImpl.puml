@startuml

package "ase.project.plugin" {
    class PlayerStatsRepositoryImpl {
        + getPlayerStats(player: Player): void
        + savePlayerStats(playerStats: PlayerStats): void
        + displayPlayerStats(): void
    }
}

package "ase.project.domain.characters.player" {
    interface PlayerStatsRepository {
        +getPlayerStats(Player) : void
        +savePlayerStats(PlayerStats) : void
        +displayPlayerStats() : void
    }
}

package "ase.project.adapters.player" {
    class PlayerStatsAdapter {
            - playerStatsRepository: PlayerStatsRepository

            + PlayerStatsAdapter(playerStatsRepository: PlayerStatsRepository)
            + getPlayerStats(player: Player): void
            + savePlayerStats(playerStats: PlayerStats): void
            + displayPlayerStats(): void
    }
    class PlayerActionManager {
            - playerCombatManager: PlayerCombatManager
            - potionManager: PotionManager
            - playerStatsAdapter: PlayerStatsAdapter
            - inputProvider: InputProvider

            + PlayerActionManager(playerStatsRepository: PlayerStatsRepository, inputProvider: InputProvider)
            + chooseAction(player: PlayerManager, level: Level): void
            - performAttackAction(player: PlayerManager, level: Level): void
            - performPotionAction(player: PlayerManager): void
            - performStatsAction(player: PlayerManager): void
            + iterateMessages(): void
    }
}

package "ase.project.adapters" {
    class GameCombatManager {
            - player: PlayerManager
            - enemies: Map<Integer, Enemy>
            - playerActionManager: PlayerActionManager
            - enemyCombatManager: EnemyCombatManager
            - level: Level
            - currentCharacterIndex: int

            + GameCombatManager(player: PlayerManager, enemies: Map<Integer, Enemy>, playerStatsRepository: PlayerStatsRepository, inputProvider: InputProvider, level: Level)
            + startCombat(): boolean
            + takeTurnsInCombat(): void
            - updateCurrentCharacterIndex(): void
            - getCurrentEnemy(): Character
    }
}

package "ase.project.x-global" {
    class StartGame {
        +main(String[]) : void
    }
}

PlayerStatsAdapter -up-> PlayerStatsRepository : uses
PlayerActionManager -up-> PlayerStatsAdapter : uses
GameCombatManager -up-> PlayerActionManager : uses
StartGame -up-> GameCombatManager : uses
PlayerStatsRepositoryImpl -up.|> PlayerStatsRepository : implements
StartGame -down-> PlayerStatsRepositoryImpl : uses

@enduml
